2023-07-24T08:27:56.084Z
cwd: ~/repo/bowrolio/DBS_Online_Results_Prototype
package: govuk-prototype-kit@13.11.0
argv: ~/.nvm/versions/node/v18.14.2/bin/node ~/.npm/_npx/ab0cb2c39bc0319f/node_modules/.bin/govuk-prototype-kit migrate
Started [Check migration is being applied to a pre v13 prototype]
Succeeded [Check migration is being applied to a pre v13 prototype]
2023-07-24T08:28:00.648Z
cwd: ~/repo/bowrolio/DBS_Online_Results_Prototype
package: govuk-prototype-kit@13.11.0
argv: ~/.nvm/versions/node/v18.14.2/bin/node ~/repo/bowrolio/DBS_Online_Results_Prototype/node_modules/.bin/govuk-prototype-kit migrate -- ~/repo/bowrolio/DBS_Online_Results_Prototype
Started [Migrate config.js to config.json]
Started [Update application SCSS file]
Started [Deleted files that are no longer needed]
Started [Deleted directories that are no longer needed]
Started [Delete listen-on-port.js]
Started [Delete server.js]
Started [Delete start.js]
Started [Delete VERSION.txt]
Started [Delete Procfile]
Started [Remove unused directory docs]
Started [Remove unused directory lib]
Started [Remove unused directory __tests__]
Started [Remove unused directory cypress]
Started [Remove unused directory internal_docs]
Started [Remove unused directory scripts]
Started [Remove unused directory public]
Succeeded [Migrate config.js to config.json]
Succeeded [Delete listen-on-port.js]
Succeeded [Delete server.js]
Succeeded [Delete start.js]
Succeeded [Delete VERSION.txt]
Succeeded [Delete Procfile]
Succeeded [Deleted files that are no longer needed]
Found [// Add your routes here - above the module.exports line] in [app/routes.js], replacing
Started [Overwrite app/filters.js]
Started [Overwrite app/views/layout.html]
Started [Overwrite app/assets/javascripts/application.js]
Keeping these lines from old file
Could not found [// Add extra styles here, or re-organise the Sass files in whichever way makes most sense to you] in [app/assets/sass/application.scss], aborting
Copying from [node_modules/govuk-prototype-kit/prototype-starter/app/filters.js] to [app/filters.js]
Copying from [node_modules/govuk-prototype-kit/prototype-starter/app/views/layouts/main.html] to [app/views/layout.html]
Started [Update app/assets/javascripts/application.js]
Started [Delete app/assets/images/separator.png]
Started [Delete app/views/includes/breadcrumb_examples.html]
Started [Delete app/views/includes/head.html]
Started [Delete app/views/includes/scripts.html]
Started [Delete app/views/layout_unbranded.html]
Started [Delete app/assets/images/separator-2x.png]
Started [Delete app/assets/javascripts/auto-store-data.js]
Started [Delete app/assets/images/unbranded.ico]
Failed [Update application SCSS file]
Succeeded [Remove unused directory internal_docs]
Succeeded [Remove unused directory scripts]
Failed [Delete app/views/includes/head.html]
Failed [Delete app/views/includes/scripts.html]
Failed [Delete app/views/layout_unbranded.html]
Failed [Delete app/assets/javascripts/auto-store-data.js]
Succeeded [Delete app/assets/images/separator.png]
Succeeded [Delete app/views/includes/breadcrumb_examples.html]
Succeeded [Delete app/assets/images/separator-2x.png]
Succeeded [Delete app/assets/images/unbranded.ico]
Succeeded [Remove unused directory __tests__]
Succeeded [Remove unused directory public]
//,// For guidance on how to create routes see:,// https://prototype-kit.service.gov.uk/docs/create-routes,//,,const govukPrototypeKit = require('govuk-prototype-kit'),const router = govukPrototypeKit.requests.setupRouter(),,// Add your routes here,,,// One Login,router.get('/create_account', (req, res) => {,  res.render('one_login/create_account');,});,,router.get('/sign_in', (req, res, _next) => {,  let backButton = '/create_account';,  res.render('one_login/sign_in', {,    backButton: backButton,,    emailAddr: req.session?.selectedCertificate?.emailAddress || '',,    validation: null,,  });,});,,//sign in password,router.get('/sign_in_verify', (req, res, _next) => {,  let backButton = '/sign_in';,  res.render('one_login/sign_in_verify', {,    backButton: backButton,,    password: req.session?.selectedCertificate?.signInPassword || '',,    validation: null,,  });,});,,router.get('/sign_in_otp', (req, res, _next) => {,  let backButton = '/sign_in_verify';,  res.render('one_login/sign_in_otp', {,    backButton: backButton,,    password: req.session?.selectedCertificate?.signInPassword || '',,    validation: null,,  });,});,,router.get('/test', (req, res) => {,  res.render('test');,});,,router.get('/list-accounts', (req, res, _next) => {,  if (!req.session?.mockDBaccounts) {,    generateAccounts(req, false);,  },  res.render('list-accounts', { accounts: req.session?.mockDBaccounts });,});,,//enter cert num,router.get('/enter-certificate', (req, res, _next) => {,  res.render('/dashboard/enter-certificate');,});,,router.post('/dashboard/enter-certificate', (req, res, _next) => {,  const dbsCertificateNumber = req.body['dbs-certificate-nr'];,  savePageData(req, req.body);,  const inputCache = loadPageData(req);,  const dataValidation = {};,  let selectedCertificate = undefined;,,  if (!dbsCertificateNumber) {,    dataValidation['dbs-certificate-nr'] = 'Enter certificate number';,  },  if (,    dbsCertificateNumber.length !== 12 ||,    dbsCertificateNumber.slice(0, 2) !== '00' ||,    /^[0-9]+$/.test(dbsCertificateNumber) === false,  ) {,    dataValidation['dbs-certificate-nr'] = 'Enter valid certificate number';,  },,  if (dbsCertificateNumber) {,    if (req.session?.mockDBaccounts) {,      selectedCertificate = req.session?.mockDBaccounts.find(,        (el) => dbsCertificateNumber === el.certificateNumber,      );,      if (selectedCertificate) {,        req.session.selectedCertificate = selectedCertificate;,      } else {,        dataValidation['dbs-certificate-nr'] = 'Enter valid certificate number';,      },    },  },,  if (Object.keys(dataValidation).length) {,    res.render('dashboard/enter-certificate', {,      cache: inputCache,,      validation: dataValidation,,    });,  } else {,    res.redirect('/create_account');,  },});,,//request OTP,router.get('/dashboard/request-otp', (req, res, _next) => {,  let backButton = '/dashboard/enter-certificate';,  res.render('dashboard/request-otp', {,    backButton: backButton,,    cache: null,,    mobileNumber: req.session?.selectedCertificate?.mobileNumber || '',,    validation: null,,  });,});,,router.post('/dashboard/request-otp', (req, res, _next) => {,  res.redirect('/dashboard/enter-otp');,});,,//enter OTP,router.get('/dashboard/enter-otp', (req, res, _next) => {,  let backButton = '/dashboard/request-otp';,  req.session.selectedCertificate.securityCode;,  res.render('dashboard/enter-otp', {,    backButton: backButton,,    mobileNumber: req.session?.selectedCertificate?.mobileNumber || '',,    validation: null,,  });,});,,router.post('/dashboard/enter-otp', (req, res, _next) => {,  let securityCode = req.body['securityCode'];,  const dataValidation = {};,,  if (!securityCode) {,    dataValidation['securityCode'] = 'Enter security code';,  },,  if (securityCode != req.session.selectedCertificate.securityCode) {,    dataValidation['securityCode'] = 'Incorrect security code';,  },,  if (Object.keys(dataValidation).length) {,    res.render('dashboard/enter-otp', {,      backButton: '/dashboard/request-otp',,      validation: dataValidation,,    });,  } else {,    res.redirect('/create_account');,  },});,,//sign in email,,,router.post('/sign_in', (req, res, _next) => {,  let postEmail = req.body['subEmail'];,  const dataValidation = {};,,  if (!postEmail) {,    dataValidation['subEmail'] = 'Enter email address';,  },,  if (postEmail != req.session.selectedCertificate.emailAddress) {,    dataValidation['subEmail'] = 'Invalid email address';,  },,  if (Object.keys(dataValidation).length) {,    res.render('sign_in', {,      backButton: '/start',,      validation: dataValidation,,    });,  } else {,    res.redirect('/sign_in_verify');,  },});,,,,router.post('/sign_in_verify', (req, res, _next) => {,  let signInPass = req.body['userPass'];,  const dataValidation = {};,,  if (!signInPass) {,    dataValidation['userPass'] = 'Enter password';,  },,  if (signInPass != req.session.selectedCertificate.signInPassword) {,    dataValidation['userPass'] = 'Incorrect password';,  },,  if (Object.keys(dataValidation).length) {,    res.render('sign_in_verify', {,      backButton: '/sign_in',,      validation: dataValidation,,    });,  } else {,    res.redirect('/results_certificate');,  },});,,//applicant certificate,router.get('/results_certificate', (req, res, _next) => {,  let backButton = '/start';,  let certificateIssueDate =,    req.session?.selectedCertificate?.certificateIssueDate;,  let certificateNumber = req.session?.selectedCertificate?.certificateNumber;,  let typeOfCheck = req.session?.selectedCertificate?.typeOfCheck;,  let typeOfWorkforce = req.session?.selectedCertificate?.typeOfWorkforce;,  let lastName = req.session?.selectedCertificate?.lastName;,  let firstName = req.session?.selectedCertificate?.firstName;,  let DOB = req.session?.selectedCertificate?.DOB;,  let firstLineAddress = req.session?.selectedCertificate?.firstLineAddress;,  let policeRecordsOfConvictions =,    req.session?.selectedCertificate?.policeRecordsOfConvictions;,  let bannerColour = '';,  let dateOfConviction = '';,  let offence = '';,  let date_offence = '';,  let court = '';,  let disposal = '';,  let police_force = '';,  let organisationName = req.session.selectedCertificate.organisationName;,  let shareCode = req.session.selectedCertificate.oneTimeShareCode;,,  if (policeRecordsOfConvictions != 'None recorded') {,    bannerColour = 'blue';,    dateOfConviction += policeRecordsOfConvictions[0].date_conviction;,    offence += policeRecordsOfConvictions[1].offence;,    date_offence += policeRecordsOfConvictions[2].date_offence;,    court += policeRecordsOfConvictions[3].court;,    disposal += policeRecordsOfConvictions[4].disposal;,    police_force += policeRecordsOfConvictions[5].police_force;,  },,  let infoSection142Education =,    req.session?.selectedCertificate?.infoSection142Education;,  let dbsChildrenBarList = req.session?.selectedCertificate?.dbsChildrenBarList;,  let dbsAdultBarList = req.session?.selectedCertificate?.dbsAdultBarList;,  let otherInfoChiefPolice =,    req.session?.selectedCertificate?.otherInfoChiefPolice;,  let result = 'revelant information';,  if (,    policeRecordsOfConvictions[0].date_conviction ==,      'None recorded - Not applicable' &&,    infoSection142Education == 'None recorded' &&,    dbsChildrenBarList == 'None recorded' &&,    dbsAdultBarList == 'None recorded' &&,    otherInfoChiefPolice == 'None recorded',  ) {,    bannerColour = 'green';,    result = 'no relevant information';,  },,  res.render('results_certificate', {,    backButton: backButton,,    certificateIssueDate: certificateIssueDate,,    certificateNumber: certificateNumber,,    typeOfCheck: typeOfCheck,,    typeOfWorkforce: typeOfWorkforce,,    lastName: lastName,,    firstName: firstName,,    DOB: DOB,,    firstLineAddress: firstLineAddress,,    policeRecordsOfConvictions: policeRecordsOfConvictions,,    bannerColour: bannerColour,,    dateOfConviction: dateOfConviction,,    offence: offence,,    date_offence: date_offence,,    court: court,,    disposal: disposal,,    police_force: police_force,,    infoSection142Education: infoSection142Education,,    dbsChildrenBarList: dbsChildrenBarList,,    dbsAdultBarList: dbsAdultBarList,,    otherInfoChiefPolice: otherInfoChiefPolice,,    result: result,,    organisationName: organisationName,,    shareCode: shareCode,,    validation: null,,  });,});,,//share OT code for viewing cert,router.get('/share_OT_code_cert', (req, res, _next) => {,  let OT_code_cert = req.session?.selectedCertificate?.oneTimeShareCode;,  res.render('share_OT_code_cert', {,    OT_code_cert: OT_code_cert,,    validation: null,,  });,});,,//needs to be updated from /sign in to /share_OT_code_cert and functionality,router.post('/sign_in', (req, res, _next) => {,  let postEmail = req.body['subEmail'];,  const dataValidation = {};,,  if (!postEmail) {,    dataValidation['subEmail'] = 'Enter email address';,  },,  if (postEmail != req.session.selectedCertificate.emailAddress) {,    dataValidation['subEmail'] = 'Invalid email address';,  },,  if (Object.keys(dataValidation).length) {,    res.render('sign_in', {,      backButton: '/start',,      validation: dataValidation,,    });,  } else {,    res.redirect('/sign_in_verify');,  },});,,//employer enter cert num,router.get('/employer_enter_cert', (req, res, _next) => {,  res.render('employer_enter_cert');,});,,//employer sharing applicant details,router.get('/employer_share_details', (req, res, _next) => {,  res.render('employer_share_details');,});,,router.post('/employer_share_details', (req, res, _next) => {,  const surname = req.body['lastName'];,  const applicant_DOB = req.body['DOB'];,  const dbsCertificateNumber = req.body['dbs-certificate-nr'];,  const shareCode = req.body['share-code'];,,  savePageData(req, req.body);,  const inputCache = loadPageData(req);,  const dataValidation = {};,,  let selectedSurname = undefined;,  let selectedDOB = undefined;,  let selectedCertificate = undefined;,,  if (!surname) {,    dataValidation['lastName'] = "Enter the applicant's last name";,  },  if (!applicant_DOB) {,    dataValidation['DOB'] = "Enter the applicant's date of birth";,  },  if (!dbsCertificateNumber) {,    dataValidation['dbs-certificate-nr'] =,      "Enter the applicant's certificate number";,  },  if (!shareCode) {,    dataValidation['share-code'] = "Enter the applicant's share code";,  },,  if (surname) {,    if (req.session?.mockDBaccounts) {,      selectedSurname = req.session?.mockDBaccounts.find(,        (el) => surname === el.lastName,      );,    } else {,      dataValidation['lastName'] = 'Enter valid applicant surname';,    },  },  if (applicant_DOB) {,    if (req.session?.mockDBaccounts) {,      selectedDOB = req.session?.mockDBaccounts.find(,        (el) => applicant_DOB === el.DOB,      );,    } else {,      dataValidation['DOB'] = "Enter the applicant's correct date of birth.";,    },  },,  if (,    dbsCertificateNumber.length !== 6 ||,    /^[0-9]+$/.test(dbsCertificateNumber) === false,  ) {,    dataValidation['dbs-certificate-nr'] =,      'Enter valid certificate number - only the last 6 digits are required';,  },,  if (dbsCertificateNumber) {,    if (req.session?.mockDBaccounts) {,      selectedCertificate = req.session?.mockDBaccounts.find(,        (el) => dbsCertificateNumber === el.certificateNumber,      );,      if (selectedCertificate) {,        req.session.selectedCertificate = selectedCertificate;,      } else {,        dataValidation['dbs-certificate-nr'] = 'Enter valid certificate number';,      },    },  },,  if (shareCode) {,    if (req.session?.mockDBaccounts) {,      selectedShareCode = req.session?.mockDBaccounts.find(,        (el) => shareCode === el.securityCode,      );,    } else {,      dataValidation['share-code'] = 'Enter a valid share code.';,    },  },,  if (Object.keys(dataValidation).length) {,    res.render('employer_share_details', {,      cache: inputCache,,      validation: dataValidation,,    });,  } else {,    res.redirect('/employer_view_cert');,  },});,,// Clear all data in session if you open /prototype-admin/clear-data,router.post('/prototype-admin/clear-data', function (req, res) {,  req.session.data = {};,  req.session.cache = {};,  generateAccounts(req, true);,  res.redirect('/start');,});,,const generateAccounts = (req, refresh) => {,  if (!req.session?.mockDBaccounts) {,    const accounts = [];,    accounts.push({,      applicationNumber: 'E2233445566',,      firstName: 'Tariq',,      lastName: 'Aziz',,      DOB: '14/05/1995',,      certificateIssueDate: '25/07/2022',,      certificateNumber: '001122334455',,      emailAddress: 'tariq.doc@gmail.com',,      signInPassword: 'superman3',,      mobileNumber: '07456782308',,      securityCode: '123456',,      resultsDayPerformed: '25/07/2022',,      typeOfCheck: 'Enhanced with Barred',,      typeOfWorkforce: 'Adult and Children',,      dateOfIssue: '25/07/2022',,      firstLineAddress: '1 Arcadia Avenue',,      policeRecordsOfConvictions: [,        { date_conviction: 'None recorded - Not applicable' },,        { offence: 'None recorded - Not applicable' },,        { date_offence: 'None recorded - Not applicable' },,        { court: 'None recorded - Not applicable' },,        { disposal: 'None recorded - Not applicable' },,        { police_force: 'None recorded - Not applicable' },,      ],,      infoSection142Education: 'None recorded',,      dbsChildrenBarList: 'None recorded',,      dbsAdultBarList: 'None recorded',,      otherInfoChiefPolice: 'None recorded',,      organisationName: 'North Tees Hospital',,      oneTimeShareCode: '8wDsxn72',,    });,    accounts.push({,      applicationNumber: 'E1177889910',,      firstName: 'Jack',,      lastName: 'Morton',,      DOB: '03/02/1978',,      certificateIssueDate: '04/08/2022',,      certificateNumber: '006677889910',,      emailAddress: 'jack.beanstalk@hotmail.co.uk',,      signInPassword: 'spiderman99!',,      mobileNumber: '07621432112',,      securityCode: '654321',,      resultsDayPerformed: '04/08/2022',,      typeOfCheck: 'Enhanced',,      typeOfWorkforce: 'Adult and Children',,      dateOfIssue: '04/08/2022',,      firstLineAddress: '23a Flatts Lane',,      policeRecordsOfConvictions: [,        { date_conviction: '12/08/2017' },,        { offence: 'Obtaining property by deception' },,        { date_offence: '1/09/2006' },,        { court: 'Coventry' },,        { disposal: 'Probation order - 12 months' },,        { police_force: 'Merseyside Police' },,      ],,      infoSection142Education: 'None recorded',,      dbsChildrenBarList: 'None recorded',,      dbsAdultBarList: 'None recorded',,      otherInfoChiefPolice: 'None recorded',,      organisationName: 'JW Building Services',,      oneTimeShareCode: '2FvcPB24',,    });,    req.session.mockDBaccounts = accounts;,  } else if (req.session.mockDBaccounts && refresh) {,    delete req.session.mockDBaccounts;,    generateAccounts(req, false);,  },};,module.exports = router;,
Found [module.exports = router;,module.exports = router] in [app/routes.js], removing
Succeeded [Update app/assets/javascripts/application.js]
Succeeded [Remove unused directory docs]
Succeeded [Overwrite app/assets/javascripts/application.js]
Succeeded [Remove unused directory cypress]
Succeeded [Update routes file]
Succeeded [Overwrite app/filters.js]
Succeeded [Remove unused directory lib]
Succeeded [Overwrite app/views/layout.html]
Succeeded [Deleted directories that are no longer needed]
Started [Remove old pattern includes from application SCSS file]
Succeeded [Remove old pattern includes from application SCSS file]
Started [Remove empty directory app/assets/images]
Started [Remove empty directory app/views/includes]
Skipped deleting app/assets/images
Skipped deleting app/views/includes
